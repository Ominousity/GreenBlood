on:
  push:
    branches:
    - master

jobs:
  Deploy-To-Private-Docker-Hub:
    runs-on: ubuntu-latest
    env:
      ECR_REPO_URL: ${{ secrets.ECR_REPO_URL }}
      DB_PATIENT_CONNECTION_STRING: ${{ secrets.DB_PATIENT_CONNECTION_STRING }}
      DB_MEASUREMENT_CONNECTION_STRING: ${{ secrets.DB_MEASUREMENT_CONNECTION_STRING }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Clear Docker build cache
      run: docker system prune -f

    - name: Build Docker image For Measurement
      run: |
        docker build -t amazonec2measurement \
        --build-arg DB_MEASUREMENT_CONNECTION_STRING="${DB_MEASUREMENT_CONNECTION_STRING}" \
        --build-arg DOTNET_RUNTIME=linux-x64 \
        -f Measurments_Service/Dockerfile \
        .

    
    - name: Build Docker image For Patient
      run: |
        docker build -t amazonec2patient \
        --build-arg DB_PATIENT_CONNECTION_STRING="${DB_PATIENT_CONNECTION_STRING}" \
        --build-arg DOTNET_RUNTIME=linux-x64 \
        -f Patient-Service/API/Dockerfile \
        .

    - name: Build Docker image For Doctor Web
      run: |
        docker build -t amazonec2doctorweb \
          frontend/Doctor/

    - name: Build Docker image For Patient Web
      run: |
        docker build -t amazonec2patientweb \
          frontend/Patient/

    - name: Set up AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-3

    - name: Login to Amazon ECR
      id: login-ecr
      run: |
        aws ecr get-login-password --region eu-west-3 | docker login --username AWS --password-stdin $ECR_REPO_URL

    - name: Tag Docker image Measurement
      run: docker tag amazonec2measurement:latest $ECR_REPO_URL/greenblod:measurement

    - name: Tag Docker image Patient
      run: docker tag amazonec2patient:latest $ECR_REPO_URL/greenblod:patient

    - name: Tag Docker image Patient Web
      run: docker tag amazonec2patientweb:latest $ECR_REPO_URL/greenblod:pweb

    - name: Tag Docker image Doctor Web
      run: docker tag amazonec2doctorweb:latest $ECR_REPO_URL/greenblod:dweb

    - name: Push Docker Measurement image to ECR
      run: docker push $ECR_REPO_URL/greenblod:measurement

    - name: Push Docker Patient image to ECR
      run: docker push $ECR_REPO_URL/greenblod:patient

    - name: Push Docker Patient Web image to ECR
      run: docker push $ECR_REPO_URL/greenblod:pweb

    - name: Push Docker Doctor Web image to ECR
      run: docker push $ECR_REPO_URL/greenblod:dweb
