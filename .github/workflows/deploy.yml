on:
  push:
    branches:
    - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      ECR_REPO_URL: ${{ secrets.ECR_REPO_URL }}
      DB_PATIENT_CONNECTION_STRING: ${{ secrets.DB_PATIENT_CONNECTION_STRING }}
      DB_MEASUREMENT_CONNECTION_STRING: ${{ secrets.DB_MEASUREMENT_CONNECTION_STRING }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build Docker image For Measurement
      run: |
        docker build -t amazonec2measurement \
          --build-arg DB_MEASUREMENT_CONNECTION_STRING="${DB_MEASUREMENT_CONNECTION_STRING}" \
          ./Measurments_Service/Dockerfile
    
    - name: Build Docker image For Patient
      run: |
        docker build -t amazonec2patient \
          --build-arg DB_PATIENT_CONNECTION_STRING="${DB_PATIENT_CONNECTION_STRING}" \
          ./Patient-Service/API/Dockerfile

    - name: Build Docker image For Doctor Web
      run: |
        docker build -t amazonec2doctorweb \
          ./frontend/Doctor/Dockerfile

    - name: Build Docker image For Patient Web
      run: |
        docker build -t amazonec2patientweb \
          ./frontend/Patient/Dockerfile

    - name: Login to AWS ECR
      run: aws ecr get-login-password --region eu-west-3 | docker login --username AWS --password-stdin $ECR_REPO_URL

    - name: Tag Docker image Measurement
      run: docker tag amazonec2measurement:latest $ECR_REPO_URL/greenblodmeasurement:latest

    - name: Tag Docker image Patient
      run: docker tag amazonec2patient:latest $ECR_REPO_URL/greenblodpatient:latest

    - name: Tag Docker image Patient Web
      run: docker tag amazonec2patientweb:latest $ECR_REPO_URL/greenblodpatientweb:latest

    - name: Tag Docker image Doctor Web
      run: docker tag amazonec2doctorweb:latest $ECR_REPO_URL/greenbloddoctorweb:latest

    - name: Push Docker Measurement image to ECR
      run: docker push $ECR_REPO_URL/greenblodmeasurement:latest

    - name: Push Docker Patient image to ECR
      run: docker push $ECR_REPO_URL/greenblodpatient:latest

    - name: Push Docker Patient Web image to ECR
      run: docker push $ECR_REPO_URL/greenblodpatientweb:latest

    - name: Push Docker Doctor Web image to ECR
      run: docker push $ECR_REPO_URL/greenbloddoctorweb:latest

    - name: SSH into EC2 and deploy
      uses: appleboy/ssh-action@master
      with:
        host: 35.180.225.108
        username: ubuntu
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          docker pull $ECR_REPO_URL/greenblodmeasurement:latest
          docker pull $ECR_REPO_URL/greenblodpatient:latest
          docker pull $ECR_REPO_URL/greenblodpatientweb:latest
          docker pull $ECR_REPO_URL/greenbloddoctorweb:latest
          docker stop greenblod-Measurement || true
          docker rm greenblod-Measurement || true
          docker stop greenblod-Patient || true
          docker rm greenblod-Patient || true
          docker stop greenblod-Patient-Web || true
          docker rm greenblod-Doctor-Web || true
          docker stop greenblod-Web || true
          docker rm greenblod-Web || true
          docker stop seq || true
          docker stop zipkin || true
          docker run -d --restart unless-stopped --name seq -e ACCEPT_EULA=Y -p 5342:80 -p 5341:5341 datalust/seq:latest
          docker run -d --restart unless-stopped --name zipkin -p 9411:9411 openzipkin/zipkin
          docker run -d --name greenblod-Measurement -p 8083:8080 --depends-on seq,zipkin $ECR_REPO_URL/greenblodmeasurement:latest
          docker run -d --name greenblod-Patient -p 8081:8080 --depends-on seq,zipkin $ECR_REPO_URL/greenblodpatient:latest
          docker run -d --name greenblod-Patient-Web -p 8082:80 --depends-on greenblod-Patient,greenblod-Measurement $ECR_REPO_URL/greenblodpatientweb:latest
          docker run -d --name greenblod-Doctor-Web -p 8080:80 --depends-on greenblod-Patient,greenblod-Measurement $ECR_REPO_URL/greenbloddoctorweb:latest
